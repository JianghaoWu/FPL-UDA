[dataset]
# tensor type (float or double)
tensor_type = float

task_type = seg
root_dir  = your data root

train_csv = your_train.csv
valid_csv = your_valid.csv
test_csv  = your_test.csv

train_batch_size = 4


load_pixelwise_weight = False
# modality number
modal_num = 1

# data transforms
train_transform = [NormalizeWithMeanStd,Pad, RandomCrop, RandomFlip, LabelToProbability]
valid_transform = [NormalizeWithMeanStd,Pad, LabelToProbability]
test_transform  = [NormalizeWithMeanStd,Pad]


NormalizeWithMeanStd_channels = [0]
NormalizeWithMeanStd_mean = None
NormalizeWithMeanStd_std  = None
NormalizeWithMeanStd_mask = False
NormalizeWithMeanStd_random_fill = False
NormalizeWithMeanStd_inverse     = False

Pad_output_size = [28, 128, 128]
Pad_ceil_mode   = False
Pad_inverse     = True

RandomCrop_output_size = [28, 128, 128]
RandomCrop_foreground_focus = True
RandomCrop_foreground_ratio = 0.5
Randomcrop_mask_label       = [1, 2]
RandomCrop_inverse     = False

RandomFlip_flip_depth  = True
RandomFlip_flip_height = False
RandomFlip_flip_width  = True
RandomFlip_inverse     = False

LabelToProbability_class_num = 2
LabelToProbability_inverse   = False

[network]
# this section gives parameters for network
# the keys may be different for different networks

# type of network
net_type = UNet2D5

# number of class, required for segmentation task
class_num     = 2
in_chns       = 1
feature_chns  = [32, 64, 128, 256, 512]
conv_dims     = [2, 2, 3, 3, 3]
dropout       = [0.0, 0.0, 0.3, 0.4, 0.5]
bilinear      = False

[training]
# list of gpus
gpus       = [0]

loss_type     = DiceLoss
DiceLoss_enable_pixel_weight = False
DiceLoss_enable_class_weight = False
loss_class_weight = [1, 1]
# for optimizers
optimizer     = Adam
learning_rate = 1e-3
momentum      = 0.9
weight_decay  = 1e-5

# for lr schedular (MultiStepLR)
lr_gamma      = 0.5
lr_milestones = [5000, 10000, 20000]

ckpt_save_dir    = ./model/exp_name
ckpt_save_prefix = unet2d5

# start iter
iter_start = 24600
iter_max   = 40000
iter_valid = 200
iter_save  = 10000

[testing]
# list of gpus
gpus       = [0]

# checkpoint mode can be [0-latest, 1-best, 2-specified]
ckpt_mode         = 1
output_dir        = your output_dir
evaluation_mode   = True
test_time_dropout = False

# use test time augmentation
tta_mode = 1

sliding_window_enable = True
sliding_window_size   = [28, 128, 128]
sliding_window_stride = [28, 128, 128]



